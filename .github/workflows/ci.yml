# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - '*'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'

name: CI

permissions: {}

jobs:
  coding-guidelines:
    name: Coding Guidelines

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - "8.4"
        dependencies:
          - highest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: json, mbstring, intl
          tools: composer

      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: php${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            php${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-

      - name: Install dependencies with composer
        run: composer update --no-ansi --no-interaction --no-progress --no-suggest

      - name: Run easy coding standard
        run: php -dmemory_limit=-1 vendor/bin/ecs check

  type-checker:
    name: Type Checker

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - "8.4"
        dependencies:
          - highest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: json, mbstring, intl
          tools: composer

      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: php${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            php${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-

      - name: Install dependencies with composer
        run: composer update --no-ansi --no-interaction --no-progress --no-suggest

      - name: Install dependencies with composer
        run: composer update --no-ansi --no-interaction --no-progress --no-suggest

      - name: Install psalm
        run: composer require --dev "vimeo/psalm:^6.8.5"

      - name: Run psalm
        run: php -dmemory_limit=-1 vendor/bin/psalm

  tests:
    name: Tests

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "7.4"
          - "8.0"
          - "8.1"
          - "8.2"
          - "8.3"
          - "8.4"
        dependencies:
          - lowest
          - highest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: pcov
          extensions: json, mbstring, intl
          tools: composer
          ini-values: assert.exception=1, zend.assertions=1, pcov.directory=., pcov.exclude="~vendor~"

      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: php${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            php${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-

      - name: Install lowest dependencies with composer
        if: matrix.dependencies == 'lowest'
        run: composer update --no-ansi --no-interaction --no-progress --no-suggest --prefer-lowest

      - name: Install highest dependencies with composer
        if: matrix.dependencies == 'highest'
        run: composer update --no-ansi --no-interaction --no-progress --no-suggest

      - name: Run tests with phpunit
        run: vendor/bin/phpunit --testsuite=unit --coverage-clover=coverage.xml

      - name: Send code coverage report to Codecov.io
        if: matrix.dependencies == 'highest' && matrix.php-version == '7.4'
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: bash <(curl -s https://codecov.io/bash) || true
